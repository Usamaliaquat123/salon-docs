"use strict";(self.webpackChunkrne_website=self.webpackChunkrne_website||[]).push([[30431],{15680:(e,n,t)=>{t.d(n,{xA:()=>g,yg:()=>m});var o=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=o.createContext({}),u=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},g=function(e){var n=u(e.components);return o.createElement(c.Provider,{value:n},e.children)},i="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),i=u(t),d=a,m=i["".concat(c,".").concat(d)]||i[d]||p[d]||r;return t?o.createElement(m,s(s({ref:n},g),{},{components:t})):o.createElement(m,s({ref:n},g))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,s=new Array(r);s[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[i]="string"==typeof e?e:a,s[1]=l;for(var u=2;u<r;u++)s[u]=t[u];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},75662:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>g,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>u,toc:()=>i});var o=t(58168),a=t(98587),r=(t(96540),t(15680)),s=["components"],l={title:"useHAppConfig()",sidebar_position:2},c=void 0,u={unversionedId:"customization/themeprovider",id:"version-4.0.0-rc.8/customization/themeprovider",title:"useHAppConfig()",description:"setReduxAccessToken",source:"@site/versioned_docs/version-4.0.0-rc.8/customization/themeprovider.mdx",sourceDirName:"customization",slug:"/customization/themeprovider",permalink:"/docs/customization/themeprovider",draft:!1,editUrl:"https://github.com/react-native-elements/react-native-elements/edit/next/website/versioned_docs/version-4.0.0-rc.8/customization/themeprovider.mdx",tags:[],version:"4.0.0-rc.8",sidebarPosition:2,frontMatter:{title:"useHAppConfig()",sidebar_position:2},sidebar:"docs",previous:{title:"useHUser()",permalink:"/docs/customization/theme_object"},next:{title:"useHCart()",permalink:"/docs/customization/useHCart"}},g={},i=[{value:"setReduxAccessToken",id:"setreduxaccesstoken",level:2},{value:"setReduxThemeMode",id:"setreduxthememode",level:2},{value:"setReduxLanguage",id:"setreduxlanguage",level:2},{value:"accessToken",id:"accesstoken",level:2},{value:"Language",id:"language",level:2},{value:"Theme Mode",id:"theme-mode",level:2},{value:"Loading",id:"loading",level:2}],p={toc:i},d="wrapper";function m(e){var n=e.components,t=(0,a.A)(e,s);return(0,r.yg)(d,(0,o.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"\n\nconst {\n   loading,\n    language,\n    themeMode,\n    accessToken,\n    setReduxAccessToken,\n    setReduxLanguage,\n    setReduxThemeMode,\n} = useHAppConfig()\n\nconsole.log(loading) /** Loading state of the app **/\nconsole.log(language) /** Language state of the app **/\nconsole.log(themeMode) /** Current theme of the app **/\nconsole.log(accessToken) /** User Current Token of the app **/\nconsole.log(setReduxAccessToken) /** set the access token on the app **/\nconsole.log(setReduxLanguage) /** set the language of the app **/\nconsole.log(setReduxThemeMode) /** set the theme of the app **/\n\n")),(0,r.yg)("h2",{id:"setreduxaccesstoken"},"setReduxAccessToken"),(0,r.yg)("p",null,"Set the token of the current logged in ",(0,r.yg)("inlineCode",{parentName:"p"},"User")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"const { setReduxAccessToken } = useHAppConfig()\n\nconsole.log(setReduxAccessToken) /** set the token of the current logged in user **/\n\n")),(0,r.yg)("h2",{id:"setreduxthememode"},"setReduxThemeMode"),(0,r.yg)("p",null,"Set the theme of the app"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"const { setReduxThemeMode } = useHAppConfig()\n\nconsole.log(setReduxThemeMode) /** purple | pink **/\n\n")),(0,r.yg)("h2",{id:"setreduxlanguage"},"setReduxLanguage"),(0,r.yg)("p",null,"Set the language of the current app level language"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"const { setReduxLanguage } = useHAppConfig()\n\nconsole.log(setReduxLanguage) /** set the language en | ar **/\n\n")),(0,r.yg)("h2",{id:"accesstoken"},"accessToken"),(0,r.yg)("p",null,"show you the current user accessToken"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"const { accessToken } = useHUser()\n\nconsole.log(accessToken) /** current user Access Token **/\n\n")),(0,r.yg)("h2",{id:"language"},"Language"),(0,r.yg)("p",null,"language will show you the current app level language"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"const { language } = useHUser()\n\nconsole.log(language) /** Language state of the app **/\n\n")),(0,r.yg)("h2",{id:"theme-mode"},"Theme Mode"),(0,r.yg)("p",null,"current app theme"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"const { themeMode } = useHUser()\n\nconsole.log(themeMode) /** Current theme of the app **/\n\n")),(0,r.yg)("h2",{id:"loading"},"Loading"),(0,r.yg)("p",null,"loading state of the app"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"const { loading } = useHUser()\n\nconsole.log(loading) /** Loading state of the app **/\n\n")))}m.isMDXComponent=!0}}]);