"use strict";(self.webpackChunkrne_website=self.webpackChunkrne_website||[]).push([[65370,2735],{15680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>m});var a=n(96540);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var g=a.createContext({}),p=function(e){var t=a.useContext(g),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(g.Provider,{value:t},e.children)},y="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,g=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),y=p(n),c=l,m=y["".concat(g,".").concat(c)]||y[c]||s[c]||i;return n?a.createElement(m,r(r({ref:t},d),{},{components:n})):a.createElement(m,r({ref:t},d))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=c;var o={};for(var g in t)hasOwnProperty.call(t,g)&&(o[g]=t[g]);o.originalType=e,o[y]="string"==typeof e?e:l,r[1]=o;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},32197:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>y,contentTitle:()=>p,default:()=>u,frontMatter:()=>g,metadata:()=>d,toc:()=>s});var a=n(58168),l=n(98587),i=(n(96540),n(15680)),r=n(53333),o=["components"],g={id:"dialog",title:"Dialog"},p=void 0,d={unversionedId:"dialog",id:"version-3.4.2/dialog",title:"Dialog",description:"Dialogs inform users about a task and can contain critical information, require decisions, or involve multiple tasks. You can wrap any component with a simple Dialog component to display quick information to the user.",source:"@site/versioned_docs/version-3.4.2/dialog.md",sourceDirName:".",slug:"/dialog",permalink:"/docs/3.4.2/dialog",draft:!1,editUrl:"https://github.com/react-native-elements/react-native-elements/edit/next/website/versioned_docs/version-3.4.2/dialog.md",tags:[],version:"3.4.2",frontMatter:{id:"dialog",title:"Dialog"}},y={},s=[{value:"Usage",id:"usage",level:2}],c={toc:s},m="wrapper";function u(e){var t=e.components,n=(0,l.A)(e,o);return(0,i.yg)(m,(0,a.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"Dialogs inform users about a task and can contain critical information, require decisions, or involve multiple tasks. You can wrap any component with a simple Dialog component to display quick information to the user."),(0,i.yg)("div",{className:"component-preview component-preview--grid component-preview--grid-3"},(0,i.yg)("figure",null,(0,i.yg)("img",{src:"/img/dialog/dialog--simple.jpg",alt:"Simple Dialog"}),(0,i.yg)("figcaption",null,"Simple")),(0,i.yg)("figure",null,(0,i.yg)("img",{src:"/img/dialog/dialog--multi.jpg",alt:"Multi Action Dialog"}),(0,i.yg)("figcaption",null,"Multi Action")),(0,i.yg)("figure",null,(0,i.yg)("img",{src:"/img/dialog/dialog--noaction.jpg",alt:"Buttonless Dialog"}),(0,i.yg)("figcaption",null,"No Action"))),(0,i.yg)("div",{className:"component-preview component-preview--grid component-preview--grid-3"},(0,i.yg)("figure",null,(0,i.yg)("img",{src:"/img/dialog/dialog--loading.gif",alt:"Loading Dialog"}),(0,i.yg)("figcaption",null,"Loading")),(0,i.yg)("figure",null,(0,i.yg)("img",{src:"/img/dialog/dialog--custom1.gif",alt:"Custom Multi Action"}),(0,i.yg)("figcaption",null,"Custom Multi Action")),(0,i.yg)("figure",null,(0,i.yg)("img",{src:"/img/dialog/dialog--custom2.gif",alt:"Custom No Action"}),(0,i.yg)("figcaption",null,"Custom No Action"))),(0,i.yg)("h2",{id:"usage"},"Usage"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-jsx"},'import React, { useState } from \'react\';\nimport { View, Text } from \'react-native\';\nimport { Dialog, Button } from \'react-native-elements\';\n\nconst DialogExample = () => {\n  const [visible1, setVisible1] = useState(false);\n  const [visible2, setVisible2] = useState(false);\n  const [visible3, setVisible3] = useState(false);\n\n  const toggleDialog1 = () => {\n    setVisible1(!visible1);\n  };\n  const toggleDialog2 = () => {\n    setVisible2(!visible2);\n  };\n  const toggleDialog3 = () => {\n    setVisible3(!visible3);\n  };\n\n  return (\n    <View>\n      <Button title="Open Simple Dialog" onPress={toggleDialog1} />\n      <Button\n        title="Open Mutli Action Dialog"\n        onPress={toggleDialog2}\n        buttonStyle={styles.button}\n      />\n      <Button\n        title="Open Loading Dialog"\n        onPress={toggleDialog3}\n        buttonStyle={styles.button}\n      />\n      // Simple Dialog\n      <Dialog isVisible={visible1} onBackdropPress={toggleDialog1}>\n        <Dialog.Title title="Dialog Title" />\n        <Text>Dialog body text. Add relevant information here.</Text>\n      </Dialog>\n      // Multi-Action Dialog\n      <Dialog isVisible={visible2} onBackdropPress={toggleDialog2}>\n        <Dialog.Title title="Dialog Title" />\n        <Text>Dialog body text. Add relevant information here.</Text>\n        <Dialog.Actions>\n          <Dialog.Button\n            title="ACTION 1"\n            onPress={() => console.log(\'Primary Action Clicked!\')}\n          />\n          <Dialog.Button\n            title="ACTION 2"\n            onPress={() => console.log(\'Secondary Action Clicked!\')}\n          />\n        </Dialog.Actions>\n      </Dialog>\n      // Loading Dialog\n      <Dialog isVisible={visible3} onBackdropPress={toggleDialog3}>\n        <Dialog.Loading />\n      </Dialog>\n    </View>\n  );\n};\n')),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"Web-platform specific note:"),(0,i.yg)("p",{parentName:"blockquote"},"You ",(0,i.yg)("strong",{parentName:"p"},"must")," pass a valid React Native ",(0,i.yg)("a",{parentName:"p",href:"https://reactnative.dev/docs/modal"},(0,i.yg)("inlineCode",{parentName:"a"},"Modal"))," component implementation\ninto ",(0,i.yg)("a",{parentName:"p",href:"#modalcomponent"},(0,i.yg)("inlineCode",{parentName:"a"},"ModalComponent"))," prop because ",(0,i.yg)("inlineCode",{parentName:"p"},"Modal")," component is not implemented yet in ",(0,i.yg)("inlineCode",{parentName:"p"},"react-native-web"))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-jsx"},"...\nimport Modal from 'modal-react-native-web';\n\n...\n\n<Dialog ModalComponent={Modal} ... />\n...\n")),(0,i.yg)("hr",null),(0,i.yg)(r.default,{mdxType:"Props"}),(0,i.yg)("hr",null))}u.isMDXComponent=!0},53333:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>g,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>y});var a=n(58168),l=n(98587),i=(n(96540),n(15680)),r=["components"],o={},g=void 0,p={unversionedId:"props/dialog",id:"version-3.4.2/props/dialog",title:"dialog",description:"Props",source:"@site/versioned_docs/version-3.4.2/props/dialog.md",sourceDirName:"props",slug:"/props/dialog",permalink:"/docs/3.4.2/props/dialog",draft:!1,editUrl:"https://github.com/react-native-elements/react-native-elements/edit/next/website/versioned_docs/version-3.4.2/props/dialog.md",tags:[],version:"3.4.2",frontMatter:{}},d={},y=[{value:"Props",id:"props",level:2},{value:"Child Components",id:"child-components",level:2},{value:"Dialog.Title",id:"dialogtitle",level:3},{value:"Dialog.Loading",id:"dialogloading",level:3},{value:"Dialog.Actions",id:"dialogactions",level:3},{value:"Dialog.Button",id:"dialogbutton",level:3},{value:"Reference",id:"reference",level:2},{value:"<code>isVisible</code>",id:"isvisible",level:3},{value:"<code>loadingStyle</code>",id:"loadingstyle",level:3},{value:"<code>loadingProps</code>",id:"loadingprops",level:3},{value:"<code>title</code>",id:"title",level:3},{value:"<code>titleStyle</code>",id:"titlestyle",level:3},{value:"<code>titleProps</code>",id:"titleprops",level:3},{value:"<code>onBackdropPress</code>",id:"onbackdroppress",level:3},{value:"<code>overlayStyle</code>",id:"overlaystyle",level:3},{value:"<code>theme</code>",id:"theme",level:3},{value:"<code>children</code>",id:"children",level:3}],s={toc:y},c="wrapper";function m(e){var t=e.components,n=(0,l.A)(e,r);return(0,i.yg)(c,(0,a.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"props"},"Props"),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"Also receives all\n",(0,i.yg)("a",{parentName:"p",href:"https://reactnativeelements.com/docs/overlay#props"},"Overlay")," props except ",(0,i.yg)("inlineCode",{parentName:"p"},"fullscreen"))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#isvisible"},(0,i.yg)("inlineCode",{parentName:"a"},"isVisible"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#loadingStyle"},(0,i.yg)("inlineCode",{parentName:"a"},"loadingStyle"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#loadingProps"},(0,i.yg)("inlineCode",{parentName:"a"},"loadingProps"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#onBackdropPress"},(0,i.yg)("inlineCode",{parentName:"a"},"onBackdropPress"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#overlayStyle"},(0,i.yg)("inlineCode",{parentName:"a"},"overlayStyle"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#theme"},(0,i.yg)("inlineCode",{parentName:"a"},"theme"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#children"},(0,i.yg)("inlineCode",{parentName:"a"},"children")))),(0,i.yg)("hr",null),(0,i.yg)("h2",{id:"child-components"},"Child Components"),(0,i.yg)("h3",{id:"dialogtitle"},"Dialog.Title"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#title"},(0,i.yg)("inlineCode",{parentName:"a"},"title"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#titleStyle"},(0,i.yg)("inlineCode",{parentName:"a"},"titleStyle"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#titleProps"},(0,i.yg)("inlineCode",{parentName:"a"},"titleProps")))),(0,i.yg)("h3",{id:"dialogloading"},"Dialog.Loading"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#loadingStyle"},(0,i.yg)("inlineCode",{parentName:"a"},"loadingStyle"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#loadingProps"},(0,i.yg)("inlineCode",{parentName:"a"},"loadingProps")))),(0,i.yg)("h3",{id:"dialogactions"},"Dialog.Actions"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#children"},(0,i.yg)("inlineCode",{parentName:"a"},"children")))),(0,i.yg)("h3",{id:"dialogbutton"},"Dialog.Button"),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"Receives all ",(0,i.yg)("a",{parentName:"p",href:"/docs/3.4.2/button#props"},"Button")," props.")),(0,i.yg)("hr",null),(0,i.yg)("h2",{id:"reference"},"Reference"),(0,i.yg)("h3",{id:"isvisible"},(0,i.yg)("inlineCode",{parentName:"h3"},"isVisible")),(0,i.yg)("p",null,"If true, the dialog is visible"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,i.yg)("th",{parentName:"tr",align:"center"},"Default"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:"center"},"boolean"),(0,i.yg)("td",{parentName:"tr",align:"center"},"false")))),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"loadingstyle"},(0,i.yg)("inlineCode",{parentName:"h3"},"loadingStyle")),(0,i.yg)("p",null,"Add additional styling for loading component (optional)"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,i.yg)("th",{parentName:"tr",align:"center"},"Default"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:"center"},"View style (object)"),(0,i.yg)("td",{parentName:"tr",align:"center"},"Internal Style")))),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"loadingprops"},(0,i.yg)("inlineCode",{parentName:"h3"},"loadingProps")),(0,i.yg)("p",null,"Add additional props for ActivityIndicator component (optional)"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,i.yg)("th",{parentName:"tr",align:"center"},"Default"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:"center"},"{",(0,i.yg)("a",{parentName:"td",href:"https://reactnative.dev/docs/activityindicator#props"},"...ActivityIndicator props"),"}"),(0,i.yg)("td",{parentName:"tr",align:"center"},"Internal object")))),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"title"},(0,i.yg)("inlineCode",{parentName:"h3"},"title")),(0,i.yg)("p",null,"Dialog title (optional)"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,i.yg)("th",{parentName:"tr",align:"center"},"Default"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:"center"},"string"),(0,i.yg)("td",{parentName:"tr",align:"center"},"none")))),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"titlestyle"},(0,i.yg)("inlineCode",{parentName:"h3"},"titleStyle")),(0,i.yg)("p",null,"Add additional styling for title component (optional)"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,i.yg)("th",{parentName:"tr",align:"center"},"Default"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:"center"},"Text style (object)"),(0,i.yg)("td",{parentName:"tr",align:"center"},"none")))),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"titleprops"},(0,i.yg)("inlineCode",{parentName:"h3"},"titleProps")),(0,i.yg)("p",null,"Add additional props for Text component (optional)"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,i.yg)("th",{parentName:"tr",align:"center"},"Default"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:"center"},"{",(0,i.yg)("a",{parentName:"td",href:"https://reactnative.dev/docs/text#props"},"...Text props"),"}"),(0,i.yg)("td",{parentName:"tr",align:"center"},"none")))),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"onbackdroppress"},(0,i.yg)("inlineCode",{parentName:"h3"},"onBackdropPress")),(0,i.yg)("p",null,"Handler for backdrop press"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,i.yg)("th",{parentName:"tr",align:"center"},"Default"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:"center"},"function"),(0,i.yg)("td",{parentName:"tr",align:"center"},"none")))),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"overlaystyle"},(0,i.yg)("inlineCode",{parentName:"h3"},"overlayStyle")),(0,i.yg)("p",null,"Add dditional styling to the internal Overlay component (optional)"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,i.yg)("th",{parentName:"tr",align:"center"},"Default"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:"center"},"View Style (object)"),(0,i.yg)("td",{parentName:"tr",align:"center"},"Internal Style")))),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"theme"},(0,i.yg)("inlineCode",{parentName:"h3"},"theme")),(0,i.yg)("p",null,"Provides a theme to the dialog. (optional)"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,i.yg)("th",{parentName:"tr",align:"center"},"Default"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:"center"},"string"),(0,i.yg)("td",{parentName:"tr",align:"center"},"Theme(Primary)")))),(0,i.yg)("hr",null),(0,i.yg)("h3",{id:"children"},(0,i.yg)("inlineCode",{parentName:"h3"},"children")),(0,i.yg)("p",null,"Enclosed components. (optional)"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,i.yg)("th",{parentName:"tr",align:"center"},"Default"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:"center"},"React Element"),(0,i.yg)("td",{parentName:"tr",align:"center"},"none")))),(0,i.yg)("hr",null))}m.isMDXComponent=!0}}]);