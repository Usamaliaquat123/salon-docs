"use strict";(self.webpackChunkrne_website=self.webpackChunkrne_website||[]).push([[82780],{15680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>g});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),y=a,g=m["".concat(s,".").concat(y)]||m[y]||d[y]||o;return n?r.createElement(g,l(l({ref:t},c),{},{components:n})):r.createElement(g,l({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=y;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},87621:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var r=n(58168),a=n(98587),o=(n(96540),n(15680)),l=n(86025),i=["components"],s={id:"bottomsheet",title:"Bottom Sheet"},p=void 0,c={unversionedId:"bottomsheet",id:"version-2.3.2/bottomsheet",title:"Bottom Sheet",description:"Overlay Modal that displays content from the bottom of the screen.",source:"@site/versioned_docs/version-2.3.2/bottomsheet.md",sourceDirName:".",slug:"/bottomsheet",permalink:"/docs/2.3.2/bottomsheet",draft:!1,editUrl:"https://github.com/react-native-elements/react-native-elements/edit/next/website/versioned_docs/version-2.3.2/bottomsheet.md",tags:[],version:"2.3.2",frontMatter:{id:"bottomsheet",title:"Bottom Sheet"},sidebar:"version-2.3.2/docs",previous:{title:"Badge",permalink:"/docs/2.3.2/badge"},next:{title:"Button",permalink:"/docs/2.3.2/button"}},m={},d=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"Reference",id:"reference",level:2},{value:"<code>isVisible</code>",id:"isvisible",level:3},{value:"<code>modalProps</code>",id:"modalprops",level:3}],y={toc:d},g="wrapper";function u(e){var t=e.components,n=(0,a.A)(e,i);return(0,o.yg)(g,(0,r.A)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"Overlay Modal that displays content from the bottom of the screen."),(0,o.yg)("img",{src:(0,l.A)("img/bottomsheet.gif"),alt:"Bottom Sheet Component"}),(0,o.yg)("h2",{id:"usage"},"Usage"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"const [isVisible, setIsVisible] = useState(false);\nconst list = [\n  { title: 'List Item 1' },\n  { title: 'List Item 2' },\n  {\n    title: 'Cancel',\n    containerStyle: { backgroundColor: 'red' },\n    titleStyle: { color: 'white' },\n    onPress: () => setIsVisible(false),\n  },\n];\n\n<BottomSheet isVisible={isVisible}>\n  {list.map((l, i) => (\n    <ListItem key={i} containerStyle={l.containerStyle} onPress={l.onPress}>\n      <ListItem.Content>\n        <ListItem.Title style={l.titleStyle}>{l.title}</ListItem.Title>\n      </ListItem.Content>\n    </ListItem>\n  ))}\n</BottomSheet>;\n")),(0,o.yg)("hr",null),(0,o.yg)("h2",{id:"props"},"Props"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"#isvisible"},(0,o.yg)("inlineCode",{parentName:"a"},"isVisible"))),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"#modalprops"},(0,o.yg)("inlineCode",{parentName:"a"},"modalProps")))),(0,o.yg)("hr",null),(0,o.yg)("h2",{id:"reference"},"Reference"),(0,o.yg)("h3",{id:"isvisible"},(0,o.yg)("inlineCode",{parentName:"h3"},"isVisible")),(0,o.yg)("p",null,"Is the modal component shown"),(0,o.yg)("table",null,(0,o.yg)("thead",{parentName:"table"},(0,o.yg)("tr",{parentName:"thead"},(0,o.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,o.yg)("th",{parentName:"tr",align:"center"},"Default"))),(0,o.yg)("tbody",{parentName:"table"},(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:"center"},"boolean"),(0,o.yg)("td",{parentName:"tr",align:"center"},"false")))),(0,o.yg)("hr",null),(0,o.yg)("h3",{id:"modalprops"},(0,o.yg)("inlineCode",{parentName:"h3"},"modalProps")),(0,o.yg)("p",null,"Additional props handed to the ",(0,o.yg)("inlineCode",{parentName:"p"},"Modal")),(0,o.yg)("table",null,(0,o.yg)("thead",{parentName:"table"},(0,o.yg)("tr",{parentName:"thead"},(0,o.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,o.yg)("th",{parentName:"tr",align:"center"},"Default"))),(0,o.yg)("tbody",{parentName:"table"},(0,o.yg)("tr",{parentName:"tbody"},(0,o.yg)("td",{parentName:"tr",align:"center"},(0,o.yg)("a",{parentName:"td",href:"https://reactnative.dev/docs/modal.html#props"},"Modal Props")),(0,o.yg)("td",{parentName:"tr",align:"center"},"{}")))))}u.isMDXComponent=!0}}]);